openapi: 3.0.3
info:
  title: Contacts API
  description: A RESTful API for managing contacts with full CRUD operations
  version: 1.0.0
  contact:
    name: API Support
    email: support@example.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: http://localhost:3000
    description: Development server
  - url: https://your-domain.com
    description: Production server

paths:
  /api/contacts:
    get:
      summary: Get all contacts
      description: Retrieve a list of all contacts ordered by creation date (newest first)
      operationId: getAllContacts
      tags:
        - Contacts
      responses:
        '200':
          description: Successfully retrieved contacts
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Contact'
              examples:
                success:
                  summary: List of contacts
                  value:
                    - id: 1
                      name: "John Doe"
                      email: "john.doe@example.com"
                      phone: "+1234567890"
                      message: "Hello, this is a test contact"
                      created_at: "2024-01-15T10:30:00.000Z"
                    - id: 2
                      name: "Jane Smith"
                      email: "jane.smith@example.com"
                      phone: "+0987654321"
                      message: "Another test contact"
                      created_at: "2024-01-14T15:45:00.000Z"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                error:
                  summary: Server error
                  value:
                    error: "Failed to fetch contacts"

    post:
      summary: Create a new contact
      description: Create a new contact with the provided information
      operationId: createContact
      tags:
        - Contacts
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContactInput'
            examples:
              example1:
                summary: Complete contact information
                value:
                  name: "John Doe"
                  email: "john.doe@example.com"
                  phone: "+1234567890"
                  message: "Hello, this is a test contact"
              example2:
                summary: Minimal contact information
                value:
                  name: "Jane Smith"
                  email: "jane.smith@example.com"
      responses:
        '201':
          description: Contact created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
              examples:
                success:
                  summary: Created contact
                  value:
                    id: 1
                    name: "John Doe"
                    email: "john.doe@example.com"
                    phone: "+1234567890"
                    message: "Hello, this is a test contact"
                    created_at: "2024-01-15T10:30:00.000Z"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                error:
                  summary: Creation failed
                  value:
                    error: "Failed to create contact"

    delete:
      summary: Delete all contacts
      description: Remove all contacts from the database
      operationId: deleteAllContacts
      tags:
        - Contacts
      responses:
        '200':
          description: All contacts deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "All contacts deleted"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                error:
                  summary: Deletion failed
                  value:
                    error: "Failed to delete contacts"

  /api/contacts/{id}:
    parameters:
      - name: id
        in: path
        required: true
        description: The unique identifier of the contact
        schema:
          type: integer
          minimum: 1
        example: 1

    get:
      summary: Get a specific contact
      description: Retrieve a single contact by its unique identifier
      operationId: getContactById
      tags:
        - Contacts
      responses:
        '200':
          description: Contact found and returned successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
              examples:
                success:
                  summary: Contact details
                  value:
                    id: 1
                    name: "John Doe"
                    email: "john.doe@example.com"
                    phone: "+1234567890"
                    message: "Hello, this is a test contact"
                    created_at: "2024-01-15T10:30:00.000Z"
        '404':
          description: Contact not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                not_found:
                  summary: Contact not found
                  value:
                    error: "Contact not found"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                error:
                  summary: Server error
                  value:
                    error: "Failed to fetch contact"

    put:
      summary: Update a specific contact
      description: Update an existing contact with new information
      operationId: updateContact
      tags:
        - Contacts
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContactInput'
            examples:
              update_example:
                summary: Updated contact information
                value:
                  name: "John Doe Updated"
                  email: "john.doe.updated@example.com"
                  phone: "+1234567890"
                  message: "Updated message"
      responses:
        '200':
          description: Contact updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
              examples:
                success:
                  summary: Updated contact
                  value:
                    id: 1
                    name: "John Doe Updated"
                    email: "john.doe.updated@example.com"
                    phone: "+1234567890"
                    message: "Updated message"
                    created_at: "2024-01-15T10:30:00.000Z"
        '404':
          description: Contact not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                not_found:
                  summary: Contact not found
                  value:
                    error: "Contact not found"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                error:
                  summary: Update failed
                  value:
                    error: "Failed to update contact"

    delete:
      summary: Delete a specific contact
      description: Remove a single contact from the database
      operationId: deleteContact
      tags:
        - Contacts
      responses:
        '200':
          description: Contact deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Contact deleted successfully"
        '404':
          description: Contact not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                not_found:
                  summary: Contact not found
                  value:
                    error: "Contact not found"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                error:
                  summary: Deletion failed
                  value:
                    error: "Failed to delete contact"

components:
  schemas:
    Contact:
      type: object
      description: A contact object with all fields
      required:
        - id
        - name
        - email
        - created_at
      properties:
        id:
          type: integer
          description: Unique identifier for the contact
          example: 1
          readOnly: true
        name:
          type: string
          description: Full name of the contact
          maxLength: 255
          example: "John Doe"
        email:
          type: string
          format: email
          description: Email address of the contact (must be unique)
          maxLength: 255
          example: "john.doe@example.com"
        phone:
          type: string
          description: Phone number of the contact
          maxLength: 20
          example: "+1234567890"
          nullable: true
        message:
          type: string
          description: Message or notes about the contact
          example: "Hello, this is a test contact"
          nullable: true
        created_at:
          type: string
          format: date-time
          description: Timestamp when the contact was created
          example: "2024-01-15T10:30:00.000Z"
          readOnly: true

    ContactInput:
      type: object
      description: Input schema for creating or updating a contact
      required:
        - name
        - email
      properties:
        name:
          type: string
          description: Full name of the contact
          maxLength: 255
          example: "John Doe"
        email:
          type: string
          format: email
          description: Email address of the contact (must be unique)
          maxLength: 255
          example: "john.doe@example.com"
        phone:
          type: string
          description: Phone number of the contact
          maxLength: 20
          example: "+1234567890"
        message:
          type: string
          description: Message or notes about the contact
          example: "Hello, this is a test contact"

    Error:
      type: object
      description: Error response schema
      required:
        - error
      properties:
        error:
          type: string
          description: Error message describing what went wrong
          example: "Failed to fetch contacts"

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT token authentication (for future implementation)

tags:
  - name: Contacts
    description: Operations related to contact management 